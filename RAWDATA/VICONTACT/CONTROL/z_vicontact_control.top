rename: @chatoutput @9


outputmacro: laura_li() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Laura_li: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: laura_si() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Laura_si: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: andre_li() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"AndrÃ©: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: sara_li() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Sara: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: jason_li() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Jason: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: constantin_si() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Constantin: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: luisa_si() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Luisa: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: natalia_si() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Natalia: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: simon_si() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Simon: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  | #DO_PROPERNAME_MERGE

outputmacro: tutorial() 
^addtopic(~introduction)
$cs_control_pre = ~timer
$cs_control_main = ~control
$cs_control_post = ~addposthoc # test post-processing 
$cs_language = german
$cs_externaltag = ~xPOSTAGSENTENCE 
$userprompt = ^"%user: >"
$botprompt = ^"Tutorial-Bot: "
$singleResponse = 1 # issue only 1 output message    
$cs_token =  #DO_NUMBER_MERGE | #DO_DATE_MERGE  

outputmacro: ^sound()

topic: ~xrejoinder system repeat ()

# simple rejoinder
u: () nofail(topic rejoinder()) 

 table: defaultbot (^name)
 ^createfact(^name defaultbot defaultbot)
DATA:
laura_li

# check the duration before each volley
topic: ~timer system()

t: ()
# calculate duration only, if there is already a starTime define = no calculation for the first volley
if  ($startTime){
$$duration = %fulltime - $startTime
}
# if duration exceeds 8 minutes, put chatPhase into "end"
if ($$duration>=480){
	$chatPhase=end
}


topic: ~control system ()
# on startup, do introduction
u: ( %input<%userfirstline) 
	gambit(~introduction)


#! [ question: open]
u: (\[ * \])
    ^respond(~prob_answer)
    ^end(SENTENCE)


# get a master copy of input then do our normal copies

u: () # main per-sentence processing
	$$currenttopic = %topic		# get the current topic at start of volley
    $_responseCount = %response
	if ($singleResponse) {$_responseCount = 0} # disable this to respond to each sentence in a volley



	if ( %response == $_responseCount) {nofail(topic ^rejoinder())}

	if (%length == 0 AND %response == $_responseCount )
	{
		nofail(TOPIC ^gambit($$currenttopic))  # gambit current topic since no input (usually start of conversation)
	}

	if (%response == $_responseCount) { nofail(TOPIC ^respond($$currenttopic)) } # current topic tries to respond to his input

	if (%response == $_responseCount) # see if some other topic has keywords matching his input (given we have no response yet)
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
			nofail(TOPIC ^respond($$topic))
			if (%response != 0) # stop when we find something to say
			{
				^end(RULE)	# we are done, this terminates the loop (not the rule)
			}
		}
	}	

	if (%response == $_responseCount) 
	{
		nofail(TOPIC respond(~keywordless))
	}

	# if we have rejoinders for what we said OR we asked a question, stop here
	if (%outputrejoinder OR %lastquestion) 
	{
		end(TOPIC)
	}

	if (%response == $_responseCount AND ^marked($$currenttopic)) { nofail(TOPIC ^gambit($$currenttopic)) } # gambit current topic since keywords match current topic

	if (%response == $_responseCount) # gambit from ANY matching topic
	{
		@8 = ^keywordtopics()	# get topics referred in input
		loop()
		{
			$$topic = first(@8subject)
				nofail(TOPIC ^Gambit($$topic))	# gambit in best matching topic
				if (%response != 0) # stop when we find something
				{
					^end(RULE)
				}
		}
	}
	if (%response == $_responseCount){ nofail(TOPIC ^gambit($$currenttopic)) } # gambit from current topic even though no keywords matched
	
	if (%response == $_responseCount) 
	{ 
		@8 = ^GambitTopics()		# all topics with gambits (excluding system topics)
		loop()
		{
			$$topic = pick(@8subject)
				nofail(TOPIC ^Gambit($$topic))	# try a topic at random
				if (%response != $_responseCount)
				{
					^end(RULE)
				}
		}
	}
	if (%response == $_responseCount) 
	{
		 ^repeat() 
		 I don't know what to say. 
	}
	
topic: ~addposthoc system () # should be called for post processing

t: () ^emoHandler()
t: ([$cs_bot=laura_li $cs_bot=andre_li $cs_bot=sara_li $cs_bot=jason_li]) ^disclosureHandler()
t: ()  $lastOutput = ^response(1)
# t: ^callstack()
# t: () popen(^"afplay soundfiles/Laura/$$sound_file\.mp3" '^sound) 
t: () ^soundFile($lastOutput)
t: ([$cs_bot=laura_li $cs_bot=andre_li $cs_bot=sara_li $cs_bot=jason_li]) ^clueHandler()
# check if there is a second response: if yes, than it means that there is a clue given and soundfile process should be repeated with this second output
t: () if (^response(2)) {$clueOutput = ^response(2) $giveClue = 1 ^soundFile($clueOutput) $giveClue = 0}
t: ($cs_bot!=tutorial) ^oob()
   ^postprintbefore(  \[ $$oob \]) $$oob = null 


topic: ~introduction  keep repeat ()

# t: ^countTest()

t: RAND() Sage t! 
    a: (t) ^generateNumber() ^reuse(RAND)


t: Sage go!
    a: (go)  $z=0 loop(1000000) { 
        $$randNum = ^generateNumber()
        #$$randcsv = ^join($$randnum \n)
        ^log(OPEN verteilung.csv $$randNum)
        ^log(OPEN verteilung.csv \n)   
        $z += 1} ^log(CLOSE verteilung.csv) 
        $z
##>>
#t: ^generateNumber() keep repeat

outputmacro: ^generateNumber()
^popen("python ./randPy.py" '^pythonrand)

outputmacro: ^pythonrand(^number)
^number

#t: [Hallo!][Hey!][Grüß Gott!] Wieviele loops sollen durchgeführt werden?
#    a: LOOP_COUNT(_*1) $loopCount= '_0 ^generateDistribution($loopCount) ^showResults()


outputmacro: ^countTest()

$result = 100 % 10
$result

outputmacro: ^generateDistribution($_loopcount)
$distributiondata=^jsoncreate(array)
# generate object for each number
$_i=1
loop(100)
{
    $number=^jsoncreate(object)
    $number.value = $_i
    $number.frequency = 0
    $number.percentage = 0 
    ## $number.randnum = empty
    ^jsonarrayinsert($distributiondata $number) 
    $_i+= 1
}

# generate percentiles
$_k=0
loop(10)
{
    $_k += 1
    $_start = $_k  
    $_end = $_start + 9
    $_k = $_end 
    $number=^jsoncreate(object)
    $number.value = ^join($_start "-" $_end)
    $number.frequency = 0
    $number.percentage = 0 
    ^jsonarrayinsert($distributiondata $number) 
}
       
# count frequency for each number + percentiles
$endcount=0
loop($_loopcount)
{
$$randNum = %rand
$$randcsv = ^join($$randnum \n) 
$$position = $$randnum - 1
$distributiondata[$$position].frequency += 1
#^log(OPEN verteilung.csv $$randcsv)
##<<if      ($$randnum < 10){$distributiondata[100].frequency += 1}
else if ($$randnum < 21){$distributiondata[101].frequency += 1}
else if ($$randnum < 31){$distributiondata[102].frequency += 1}
else if ($$randnum < 41){$distributiondata[103].frequency += 1}
else if ($$randnum < 51){$distributiondata[104].frequency += 1}
else if ($$randnum < 61){$distributiondata[105].frequency += 1}
else if ($$randnum < 71){$distributiondata[106].frequency += 1}
else if ($$randnum < 81){$distributiondata[107].frequency += 1}
else if ($$randnum < 91){$distributiondata[108].frequency += 1}
else if ($$randnum < 101){$distributiondata[109].frequency += 1}
##>> $distributiondata[$$randnum].randnum = $$randnum
# $distributiondata[$$randnum].percentage = $distributiondata[$$randnum].frequency / $loopCount * 100
# $distributiondata[$$randnum].percentage += 1
$endcount += 1 
}

# calculate percentage afterwards (faster)
$_p=0
loop(^length($distributiondata))
{
$distributiondata[$_p].percentage = $distributiondata[$_p].frequency / $loopCount * 100
$_p += 1
}

outputmacro: ^showResults()
^jsontree($distributiondata)
#^log(CLOSE verteilung.csv)
$endcount